name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  FORCE_COLOR: 2
  CI_REGISTRY_BASE_URL: ghcr.io
  CI_REGISTRY_USER: ${{ github.actor }}
  CI_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  CI_REGISTRY_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Nix with Flakes support and Haskell Nix binary cache
        uses: cachix/install-nix-action@v31
      - name: Use Cachix to pull and push binary cache
        uses: cachix/cachix-action@v16
        with:
          name: tricktron
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Cache dev shell & install Npm dependencies
        run: |
          nix develop -c npm ci
          nix develop -c npm run build

      - name: Shellcheck tests
        run: nix develop -c shellcheck -x tests/**/*.sh

      - name: Shellcheck src
        run: nix develop -c shellcheck src/*.sh

      - name: Run tests
        run: nix develop -c bashunit tests

      - name: Run Docker integration test
        run: nix run .#dockerIntegrationTest

      - name: Generate coverage
        run: >-
          nix develop -c kcov
          --clean
          --include-path=src
          --include-pattern=.sh
          coverage bashunit tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage
          fail_ci_if_error: true
          verbose: true

      - name: Build & push crd2jsonschema amd64 image
        if: github.ref == 'refs/heads/main'
        run: nix run .#push-amd64-image-to-registry

      - name: Build & push crd2jsonschema arm64 image
        if: github.ref == 'refs/heads/main'
        run: nix run .#push-arm64-image-to-registry

      - name: Create multi arch image and retag it as latest
        if: github.ref == 'refs/heads/main'
        run: |
          nix run .#create-multi-arch-manifest
          nix run .#retag-image
